.image-modal-overlay { 
        /* layer bw card grid & image-modal-content that contains modal image. Since image-modal-content takes up whole screen, image-modal-overlay is entirely hidden - consider removing. */
        position: fixed; 
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: var(--image-modal-overlay-bg);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
}
.image-modal-content { /* Contains image, text, buttons. */
        background: var(--image-modal-content-bg);
        padding: 0;
        width: 100vw;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        box-sizing: border-box;
        overflow: hidden;
        row-gap: 12px;
}
.image-modal-nav-and-text { /* Contains text, buttons. */
        background: var(--image-modal-nav-and-text-bg);
        color: var(--image-modal-and-card-text-txt);
        width: 100%;
        height: fit-content;
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: flex-start;
        padding: 6px 0;
        gap: 6px; 
        box-sizing: border-box;
        border-radius: 0;
        min-height: fit-content;
}
.image-modal-nav { /* Contains buttons. */
        background-color: var(--image-modal-nav-bg);
        height: auto;
        display: flex;
        justify-content: flex-end;
        align-items: flex-start;
        padding: 0;
        margin: 0;
        gap: .45vw;
        box-sizing: border-box;
        border-radius: 6px;
        flex: 1 1 50%;
}
@media (min-width: 601px) and (max-width: 1024px) {
.image-modal-nav { /* e: div */
        opacity: 1;
        order: 2;
        padding: 0 6px 0 0;
}
}
@media (max-width: 600px) {
.image-modal-nav { /* e: div */
        opacity: 1;
        order: 2;
        padding: 0 6px 0 0;
}
}
i {
        font-size: 1.8rem;
}
.image-modal-close { /* e: div */
        height: 100%;
        box-sizing: border-box;
        border-radius: 6px;
}
.image-modal-nav-button {
        border: none;
        padding: 0;
        margin: 0;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        justify-content: center;
}
.image-modal-close i { /* e: div */
        font-size: 1.8rem;
}
.image-modal-nav-button .bi {
        font-size: 2rem;
        padding: 4px;
        transition: transform 0.25s ease, opacity 0.25s ease;
}
.image-modal-back-and-forward { /* e: div */
        background-color: var(--image-modal-back-and-forward-bg);
        height: 100%;
        display: flex;
        justify-content: space-between;
        align-items: flex-end;
        padding: 0;
        gap: .4vw;
        box-sizing: border-box;
        border-radius: 6px;
}
@media (max-width: 1024px) {
  .image-modal-back-and-forward { pointer-events: none; }
  .image-modal-back-and-forward .image-modal-nav-button { pointer-events: auto; }
}
.image-modal-text {
        background-color: var(--image-modal-text);
        padding: 2px 0 2px 4px;
        border-radius: 6px;
        flex: 1 1 50%;
}
@media (min-width: 601px) and (max-width: 1024px) {
.image-modal-text {
        opacity: 1;
        padding: 4px 0 0 10px;
}
}
@media (max-width: 600px) {
.image-modal-text {
        opacity: 1;
}
}.image-modal-headline {
        background-color: var(--image-modal-headline-bg);
        font-size: 1.2rem;
        margin: 0;
        padding: 0;
        line-height: 1rem;    
}
.image-modal-date-location {
        background-color: var(--image-modal-date-bg);
        font-size: 1rem;
        margin: 0;
        padding: 0;
        line-height: 1rem;    
}
.image-modal-date {
        background-color: var(--image-modal-date-bg);
        font-size: .9rem;
        margin: 0;
        padding: 0px 0 1px 0;
        line-height: 1rem;    
}
.image-modal-location {
        display: none;
        background-color: var(--image-modal-location-bg);
        font-size: .8rem;
        margin: 0;
        padding: 8px 0 6px 0;
        line-height: .75rem;    
}
.image-modal-description {  
        display: none;
        background-color: var(--image-modal-description-bg);
        font-size: 1rem;
        margin: 0;
        padding: 8px 0 5px 0;
        line-height: 1.25rem;    
}
.image-modal-filename {
        background-color: var(--image-modal-filename-bg);
        display: none;
}
.image-modal-keywords {
        background-color: var(--image-modal-keywords-bg);
        display: none;
}
.image-modal-image-container {
        flex-grow: 1;
        max-width: 100%;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 8px;
        overflow: hidden;
        /* Remove padding so the rounded edge is flush.
        If you want spacing, put it on a wrapper above this element instead. */
        padding: 0 12px 12px 12px;
        box-sizing: border-box;
}
/* 2) Ensure wrapper fills and inherits radius */
.image-modal-image-container picture {
        width: 100%;
        height: 100%;
        display: block;
        border-radius: inherit;   /* keeps all corners aligned */
}
/* 3) The actual image: fill the box, preserve aspect, inherit radius */
.image-modal-image-container img {
        width: 100%;
        height: 100%;
        display: block;
        object-fit: contain;      /* show entire image */
        border-radius: inherit;   /* match container corners */
        border-radius: 8px;
}
/* Optional: only if you still see square corners after step 1 */
.image-modal-image-container picture,
.image-modal-image-container img {
        border-radius: inherit !important;
        border-radius: 8px;
}
@media (max-width: 1024px) {
/* Make sure the overall modal is a positioned container if you later want to anchor to it; not strictly required for fixed. */
.image-modal-content {
        position: relative;
}
/* Take the existing back/forward group out of the header flow and pin it centered over the image area */
.image-modal-back-and-forward {
        position: fixed; /* sits above the image regardless of scroll */
        top: 50vh; /* roughly the vertical center of the viewport */
        left: 0;
        right: 0;
        transform: translateY(-50%);
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 20px; /* gutter from edges */
        z-index: 1001; /* above image; below any global overlays */
        background: transparent; /* no background strip */
        pointer-events: none; /* let only the buttons be clickable */
}
/* Make the actual buttons clickable and styled as on-image pills */
.image-modal-back-and-forward .image-modal-nav-button {
        pointer-events: auto; /* re-enable pointer for the buttons */
        border-radius: 6px;
        box-shadow: 0 2px 10px rgba(0,0,0,.35);
}
.image-modal-back-and-forward .bi {
        font-size: 2rem;
        padding: 8px;              /* larger hit area on touch */
        line-height: 1;
}
/* Optional: hide any residual height that the group might claim in header */
.image-modal-nav {
        align-items: center;
}
}
@media (max-width: 1024px) {
.image-modal-back-and-forward .image-modal-nav-button {
        opacity: 0.9;
        transition: opacity 150ms ease, transform 150ms ease;
}
.image-modal-back-and-forward .image-modal-nav-button:active {
        transform: scale(0.96);
}
}
/* Base: your existing layout stays the same */

/* Immersive mode: no text/buttons, edge-to-edge image */
.image-modal-content.immersive {
  padding: 0;              /* if you added inner padding anywhere */
  background: black;       /* optional: cinematic look */
}

.image-modal-content.immersive .image-modal-image-container {
  /* already flex:1 in your setup; ensure it fills fully */
  width: 100%;
  height: 100%;
}

/* Make sure the picture/img fill the container */
.image-modal-content.immersive .image-modal-image-container picture,
.image-modal-content.immersive .image-modal-image-container img {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: contain;     /* keep full image visible */
  border-radius: 0;        /* or inherit if you prefer rounded; remove overflow if so */
}

/* Optional: show a helpful cursor on desktop; touch devices ignore it */
@media (hover: hover) and (pointer: fine) {
  .image-modal-content.immersive .image-modal-image-container {
    cursor: zoom-out;
  }
}
/* Smooth background + chrome fade when toggling immersive */
.image-modal-content { 
  transition: background 200ms ease, background-color 200ms ease; /* cover both props */
}

/* Default chrome state */
.image-modal-nav-and-text,
.image-modal-back-and-forward {
  opacity: 1;
  pointer-events: auto;
  transition: opacity 200ms ease;
}

/* Immersive: fully fade and disable interaction */
.image-modal-content.immersive .image-modal-nav-and-text,
.image-modal-content.immersive .image-modal-nav-and-text *,
.image-modal-content.immersive .image-modal-back-and-forward,
.image-modal-content.immersive .image-modal-back-and-forward * {
  opacity: 0 !important;
  pointer-events: none !important;
}


/* Optional: nudge image a hair for a "focused" feel */
.image-modal-image-container picture,
.image-modal-image-container img {
  transition: transform 250ms ease, opacity 200ms ease;
  will-change: transform, opacity;
}

.image-modal-content.immersive .image-modal-image-container img {
  transform: scale(1.02); /* subtle; remove if you prefer zero movement */
}

/* If you want the immersive background to get slightly darker */
.image-modal-content.immersive {
  background-color: #000; /* or keep your var(...) if you have one */
}

@media (prefers-reduced-motion: reduce) {
  .image-modal-content,
  .image-modal-nav-and-text,
  .image-modal-back-and-forward,
  .image-modal-image-container picture,
  .image-modal-image-container img {
    transition: none !important;
  }
}
/* Ensure the header bar sits above the fixed on-image controls */
.image-modal-nav-and-text {
  position: relative;
  z-index: 1002; /* higher than .image-modal-back-and-forward (1001) */
}
